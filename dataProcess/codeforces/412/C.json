{
    "name": "Pattern",
    "index": "C",
    "description": "Developers often face with regular expression patterns. A pattern is usually defined as a string consisting of characters and metacharacters that sets the rules for your search. These patterns are most often used to check whether a particular string meets the certain rules.\n\nIn this task, a pattern will be a string consisting of small English letters and question marks ('?'). The question mark in the pattern is a metacharacter that denotes an arbitrary small letter of the English alphabet. We will assume that a string matches the pattern if we can transform the string into the pattern by replacing the question marks by the appropriate characters. For example, string aba matches patterns: ???, ??a, a?a, aba.\n\nProgrammers that work for the R1 company love puzzling each other (and themselves) with riddles. One of them is as follows: you are given *n* patterns of the same length, you need to find a pattern that contains as few question marks as possible, and intersects with each of the given patterns. Two patterns intersect if there is a string that matches both the first and the second pattern. Can you solve this riddle?",
    "full_description": "Developers often face with regular expression patterns. A pattern is usually defined as a string consisting of characters and metacharacters that sets the rules for your search. These patterns are most often used to check whether a particular string meets the certain rules.\n\nIn this task, a pattern will be a string consisting of small English letters and question marks ('?'). The question mark in the pattern is a metacharacter that denotes an arbitrary small letter of the English alphabet. We will assume that a string matches the pattern if we can transform the string into the pattern by replacing the question marks by the appropriate characters. For example, string aba matches patterns: ???, ??a, a?a, aba.\n\nProgrammers that work for the R1 company love puzzling each other (and themselves) with riddles. One of them is as follows: you are given *n* patterns of the same length, you need to find a pattern that contains as few question marks as possible, and intersects with each of the given patterns. Two patterns intersect if there is a string that matches both the first and the second pattern. Can you solve this riddle?\nThe first line contains a single integer *n* (1<=≤<=*n*<=≤<=105) — the number of patterns. Next *n* lines contain the patterns.\n\nIt is guaranteed that the patterns can only consist of small English letters and symbols '?'. All patterns are non-empty and have the same length. The total length of all the patterns does not exceed 105 characters.\nIn a single line print the answer to the problem — the pattern with the minimal number of signs '?', which intersects with each of the given ones. If there are several answers, print any of them.",
    "train_in_outs": {
        "inputs": [
            "2\n?ab\n??b\n",
            "2\na\nb\n",
            "1\n?a?b\n"
        ],
        "outputs": [
            "aab",
            "?\n",
            "aaab"
        ]
    },
    "test_in_outs": {
        "inputs": [
            "2\n?ab\n??b",
            "2\na\nb",
            "1\n?a?b",
            "1\n?",
            "3\nabacaba\nabacaba\nabacaba",
            "3\nabc?t\n?bc?z\nab??t",
            "4\nabc\ndef\n???\nxyz",
            "2\n?????\n?????",
            "2\na\na",
            "3\nabc\n???\naxc",
            "1\n?m??x?xxexxx?xxmxx??",
            "2\nhszhh?zszs\nhhzhz?zzhs",
            "3\neddzde\needded\nzdde?z",
            "4\nff?o?\nfk?of\nk?kof\nfk?oo",
            "5\nyigi\ne?gi\niig?\n?eg?\n??gi",
            "100\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz",
            "100\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?\nb?",
            "1\nq",
            "2\n?\n?",
            "2\n?\na",
            "2\n?\nb",
            "3\n?\na\na",
            "3\na\n?\na",
            "3\na\nb\n?",
            "3\n?\na\nb",
            "3\nb\n?\na",
            "2\n???\naaa",
            "2\n??\nss"
        ],
        "outputs": [
            "aab",
            "?",
            "aaab",
            "a",
            "abacaba",
            "abca?",
            "???",
            "aaaaa",
            "a",
            "a?c",
            "amaaxaxxexxxaxxmxxaa",
            "h?zh?az??s",
            "??d???",
            "??ko?",
            "??gi",
            "z",
            "ba",
            "q",
            "a",
            "a",
            "b",
            "a",
            "a",
            "?",
            "?",
            "?",
            "aaa",
            "ss"
        ]
    },
    "code": "n = int(input())\nstrs = []\nfor i in range(n):\n    s = input()\n    strs.append(s)\n\nl = len(strs[0])\n\nans = ['.' for i in range(l)]\n\nfor p in range(l):\n    for s in strs:\n        c = s[p]\n\n        if c != \"?\" and ans[p] == \".\":\n            ans[p] = c\n        elif c != \"?\" and c != ans[p]:\n            ans[p] = \"?\"\n\n\nfor i in range(len(ans)):\n    if ans[i] == '.':\n        ans[i] = \"a\"\n\nprint(''.join(list(map(str, ans))))\n\n",
    "rating": "1200"
}
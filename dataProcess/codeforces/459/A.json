{
    "name": "Pashmak and Garden",
    "index": "A",
    "description": "Pashmak has fallen in love with an attractive girl called Parmida since one year ago...\n\nToday, Pashmak set up a meeting with his partner in a romantic garden. Unfortunately, Pashmak has forgotten where the garden is. But he remembers that the garden looks like a square with sides parallel to the coordinate axes. He also remembers that there is exactly one tree on each vertex of the square. Now, Pashmak knows the position of only two of the trees. Help him to find the position of two remaining ones.",
    "full_description": "Pashmak has fallen in love with an attractive girl called Parmida since one year ago...\n\nToday, Pashmak set up a meeting with his partner in a romantic garden. Unfortunately, Pashmak has forgotten where the garden is. But he remembers that the garden looks like a square with sides parallel to the coordinate axes. He also remembers that there is exactly one tree on each vertex of the square. Now, Pashmak knows the position of only two of the trees. Help him to find the position of two remaining ones.\nThe first line contains four space-separated *x*1,<=*y*1,<=*x*2,<=*y*2 (<=-<=100<=≤<=*x*1,<=*y*1,<=*x*2,<=*y*2<=≤<=100) integers, where *x*1 and *y*1 are coordinates of the first tree and *x*2 and *y*2 are coordinates of the second tree. It's guaranteed that the given points are distinct.\nIf there is no solution to the problem, print -1. Otherwise print four space-separated integers *x*3,<=*y*3,<=*x*4,<=*y*4 that correspond to the coordinates of the two other trees. If there are several solutions you can output any of them. \n\nNote that *x*3,<=*y*3,<=*x*4,<=*y*4 must be in the range (<=-<=1000<=≤<=*x*3,<=*y*3,<=*x*4,<=*y*4<=≤<=1000).",
    "train_in_outs": {
        "inputs": [
            "0 0 0 1\n",
            "0 0 1 1\n",
            "0 0 1 2\n"
        ],
        "outputs": [
            "1 0 1 1\n",
            "0 1 1 0\n",
            "-1\n"
        ]
    },
    "test_in_outs": {
        "inputs": [
            "0 0 0 1",
            "0 0 1 1",
            "0 0 1 2",
            "-100 -100 100 100",
            "-100 -100 99 100",
            "0 -100 0 100",
            "27 -74 27 74",
            "0 1 2 3",
            "-100 100 100 -100",
            "-100 -100 -100 100",
            "100 100 100 -100",
            "100 -100 -100 -100",
            "-100 100 100 100",
            "0 1 0 0",
            "1 1 0 0",
            "0 0 1 0",
            "1 0 0 1",
            "1 0 1 1",
            "1 1 0 1",
            "15 -9 80 -9",
            "51 -36 18 83",
            "69 -22 60 16",
            "-68 -78 -45 -55",
            "68 -92 8 -32",
            "95 -83 -39 -6",
            "54 94 53 -65",
            "-92 15 84 15",
            "67 77 -11 -1",
            "91 -40 30 21",
            "66 -64 -25 -64",
            "-42 84 -67 59",
            "73 47 -5 -77",
            "6 85 -54 -84",
            "-58 -55 40 43",
            "56 22 48 70",
            "-17 -32 76 -32",
            "0 2 2 0",
            "0 0 -1 1",
            "0 2 1 1",
            "0 0 1 -1",
            "-1 2 -2 3",
            "0 1 1 0",
            "1 2 2 1",
            "4 1 2 1",
            "70 0 0 10",
            "2 3 4 1",
            "1 3 3 1",
            "-3 3 0 0",
            "2 8 7 3",
            "1 2 2 3",
            "0 3 3 0",
            "0 0 -3 3",
            "0 2 1 2",
            "1 1 2 0",
            "0 0 5 0",
            "3 4 7 8",
            "0 5 5 0",
            "5 6 8 3",
            "2 2 1 1",
            "0 1 3 1",
            "2 4 5 4",
            "0 5 1 5",
            "4 0 0 4",
            "0 1 1 8",
            "2 3 3 4",
            "1 0 2 1",
            "0 0 2 14",
            "0 0 4 3",
            "3 5 5 3",
            "-1 1 1 -1",
            "0 0 2 0",
            "0 0 1 7",
            "1 2 3 2",
            "1 12 3 10"
        ],
        "outputs": [
            "1 0 1 1",
            "0 1 1 0",
            "-1",
            "-100 100 100 -100",
            "-1",
            "200 -100 200 100",
            "175 -74 175 74",
            "0 3 2 1",
            "-100 -100 100 100",
            "100 -100 100 100",
            "300 100 300 -100",
            "100 100 -100 100",
            "-100 300 100 300",
            "1 1 1 0",
            "1 0 0 1",
            "0 1 1 1",
            "1 1 0 0",
            "2 0 2 1",
            "1 2 0 2",
            "15 56 80 56",
            "-1",
            "-1",
            "-68 -55 -45 -78",
            "68 -32 8 -92",
            "-1",
            "-1",
            "-92 191 84 191",
            "67 -1 -11 77",
            "91 21 30 -40",
            "66 27 -25 27",
            "-42 59 -67 84",
            "-1",
            "-1",
            "-58 43 40 -55",
            "-1",
            "-17 61 76 61",
            "0 0 2 2",
            "0 1 -1 0",
            "0 1 1 2",
            "0 -1 1 0",
            "-1 3 -2 2",
            "0 0 1 1",
            "1 1 2 2",
            "4 3 2 3",
            "-1",
            "2 1 4 3",
            "1 1 3 3",
            "-3 0 0 3",
            "2 3 7 8",
            "1 3 2 2",
            "0 0 3 3",
            "0 3 -3 0",
            "0 3 1 3",
            "1 0 2 1",
            "0 5 5 5",
            "3 8 7 4",
            "0 0 5 5",
            "5 3 8 6",
            "2 1 1 2",
            "0 4 3 4",
            "2 7 5 7",
            "0 6 1 6",
            "4 4 0 0",
            "-1",
            "2 4 3 3",
            "1 1 2 0",
            "-1",
            "-1",
            "3 3 5 5",
            "-1 -1 1 1",
            "0 2 2 2",
            "-1",
            "1 4 3 4",
            "1 10 3 12"
        ]
    },
    "code": "x1, y1, x2, y2, = input().split()\r\nx1 = int(x1)\r\ny1 = int(y1)\r\nx2 = int(x2)\r\ny2 = int(y2)\r\nif x1 - x2 == 0 or y1 - y2 == 0:\r\n    if x1 - x2 != 0:\r\n        x3 = x1\r\n        x4 = x2\r\n        y3 = y4 = y1 + abs(x1 - x2)\r\n        print(x3, y3, x4, y4)\r\n    elif y1 - y2 != 0:\r\n        y3 = y1\r\n        y4 = y2\r\n        x3 = x4 = x1 + abs(y1 - y2)\r\n        print(x3, y3, x4, y4)\r\nelif abs(x1 - x2) != abs(y1 - y2):\r\n    print(-1)\r\nelif abs(x1 - x2) == abs(y1 - y2):\r\n    x3 = x2\r\n    y3 = y1\r\n    x4 = x1\r\n    y4 = y2\r\n    print(x3, y3, x4, y4)\r\n",
    "rating": "1200"
}